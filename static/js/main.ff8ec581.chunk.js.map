{"version":3,"sources":["components/getData/getData.ts","components/Todo/Todo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["getCommonData","url","a","fetch","response","json","getData","users","todos","map","todo","user","find","id","userId","Todo","props","className","name","title","completed","TodoList","key","App","useState","setTodos","isLoading","setIsLoading","handleStart","todosFromServer","filterForAll","filterType","sort","b","localeCompare","length","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"qQAGMA,EAAa,uCAAG,WAAUC,GAAV,eAAAC,EAAA,sEACGC,MAAMF,GADT,cACdG,EADc,yBAGbA,EAASC,QAHI,2CAAH,sDAcNC,EAAO,uCAAG,8BAAAJ,EAAA,sEAPdF,EAVS,8CAiBK,cACfO,EADe,gBAHdP,EAbS,8CAgBK,cAEfQ,EAFe,yBAIdA,EAAMC,KAAI,SAACC,GAChB,OAAO,eACFA,EADL,CAEEC,KAAMJ,EAAMK,MAAK,SAACD,GAAD,OAAgBA,EAAKE,KAAOH,EAAKI,gBAPjC,2CAAH,qDCXPC,EAAkB,SAACC,GAAW,IACjCN,EAASM,EAATN,KAER,OACE,4BACE,wBAAIO,UAAU,QAAQP,EAAKC,KAAKO,MAChC,wBAAID,UAAU,QAAQP,EAAKS,OAC3B,wBAAIF,UAAU,QAAd,UAAyBP,EAAKU,cCNvBC,EAAsB,SAACL,GAAW,IACrCR,EAAUQ,EAAVR,MAER,OACE,2BAAOS,UAAU,SACf,+BACE,4BACE,wBAAIA,UAAU,mBAAd,QACA,wBAAIA,UAAU,mBAAd,SACA,wBAAIA,UAAU,mBAAd,eAGJ,+BACGT,EAAMC,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CAAMY,IAAKZ,EAAKG,GAAIH,KAAMA,UC6DrBa,EA7EC,WAAO,IAAD,EACMC,mBAAyB,IAD/B,mBACbhB,EADa,KACNiB,EADM,OAEcD,oBAAS,GAFvB,mBAEbE,EAFa,KAEFC,EAFE,KAKdC,EAAW,uCAAG,4BAAA1B,EAAA,6DAClByB,GAAa,GADK,SAEYrB,IAFZ,OAEZuB,EAFY,OAIlBJ,EAASI,GACTF,GAAa,GALK,2CAAH,qDAQXG,EAAe,SAACC,GACpB,OAAQA,GACN,IAAK,QACHN,EAAS,YAAIjB,GACVwB,MAAK,SAAC9B,EAAG+B,GAAJ,OAAU/B,EAAEiB,MAAMe,cAAcD,EAAEd,WAC1C,MACF,IAAK,OACHM,EAAS,YAAIjB,GACVwB,MAAK,SAAC9B,EAAG+B,GAAJ,OAAU/B,EAAES,KAAKO,KAAKgB,cAAcD,EAAEtB,KAAKO,UACnD,MACF,IAAK,YACHO,EAAS,YAAIjB,GACVwB,MAAK,SAAC9B,EAAG+B,GAAJ,OAAW/B,EAAEkB,WAAaa,EAAEb,gBAM1C,OAAIM,EAEA,yBAAKT,UAAU,OACb,2CAKDT,EAAM2B,OAST,yBAAKlB,UAAU,OACb,yBAAKA,UAAU,eACb,4BACEA,UAAU,iBACVmB,KAAK,SACLC,QAAS,kBAAMP,EAAa,WAH9B,gBAOA,4BACEb,UAAU,iBACVmB,KAAK,SACLC,QAAS,kBAAMP,EAAa,UAH9B,eAOA,4BACEb,UAAU,iBACVmB,KAAK,SACLC,QAAS,kBAAMP,EAAa,eAH9B,qBAQF,kBAAC,EAAD,CAAUtB,MAAOA,KA/BjB,yBAAKS,UAAU,OACb,4BAAQA,UAAU,iBAAiBmB,KAAK,SAASC,QAAST,GAA1D,SC3CRU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ff8ec581.chunk.js","sourcesContent":["const URL_USERS = 'https://jsonplaceholder.typicode.com/users';\nconst URL_TODOS = 'https://jsonplaceholder.typicode.com/todos';\n\nconst getCommonData = async <T>(url: string): Promise<T> => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n\nexport const getUsers = (): Promise<User[]> => {\n  return getCommonData(URL_USERS);\n};\n\nexport const getTodos = (): Promise<Todo[]> => {\n  return getCommonData(URL_TODOS);\n};\n\nexport const getData = async (): Promise<TodoWithUser[]> => {\n  const users = await getUsers();\n  const todos = await getTodos();\n\n  return todos.map((todo: Todo) => {\n    return {\n      ...todo,\n      user: users.find((user: User) => user.id === todo.userId) as User,\n    };\n  });\n};\n","import React, { FC } from 'react';\n\ninterface Props {\n  todo: TodoWithUser;\n}\n\nexport const Todo: FC<Props> = (props) => {\n  const { todo } = props;\n\n  return (\n    <tr>\n      <td className=\"cell\">{todo.user.name}</td>\n      <td className=\"cell\">{todo.title}</td>\n      <td className=\"cell\">{`${todo.completed}`}</td>\n    </tr>\n  );\n};\n","import React, { FC } from 'react';\nimport { Todo } from '../Todo';\n\ninterface Props {\n  todos: TodoWithUser[];\n}\n\nexport const TodoList: FC<Props> = (props) => {\n  const { todos } = props;\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th className=\"cell cell--head\">Name</th>\n          <th className=\"cell cell--head\">Title</th>\n          <th className=\"cell cell--head\">completed</th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(todo => (\n          <Todo key={todo.id} todo={todo} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport './App.css';\nimport { getData } from './components/getData/getData';\nimport { TodoList } from './components/TodoList';\n\nconst App: FC = () => {\n  const [todos, setTodos] = useState<TodoWithUser[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  const handleStart = async () => {\n    setIsLoading(true);\n    const todosFromServer = await getData();\n\n    setTodos(todosFromServer);\n    setIsLoading(false);\n  };\n\n  const filterForAll = (filterType: string) => {\n    switch (filterType) {\n      case 'title':\n        setTodos([...todos]\n          .sort((a, b) => a.title.localeCompare(b.title)));\n        break;\n      case 'name':\n        setTodos([...todos]\n          .sort((a, b) => a.user.name.localeCompare(b.user.name)));\n        break;\n      case 'completed':\n        setTodos([...todos]\n          .sort((a, b) => +a.completed - +b.completed));\n        break;\n      default:\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"app\">\n        <p>Loading....</p>\n      </div>\n    );\n  }\n\n  if (!todos.length) {\n    return (\n      <div className=\"app\">\n        <button className=\"button is-info\" type=\"button\" onClick={handleStart}>Add</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"buttons-box\">\n        <button\n          className=\"button is-info\"\n          type=\"button\"\n          onClick={() => filterForAll('title')}\n        >\n          Filter Title\n        </button>\n        <button\n          className=\"button is-info\"\n          type=\"button\"\n          onClick={() => filterForAll('name')}\n        >\n          Filter Name\n        </button>\n        <button\n          className=\"button is-info\"\n          type=\"button\"\n          onClick={() => filterForAll('completed')}\n        >\n          Filter Completed\n        </button>\n      </div>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}